[project]
name = "pdf-table-extractor"
version = "1.0.0"
description = "Asynchronous PDF title extraction service"
authors = [{ name = "zhou" }]
requires-python = ">=3.12"

# 建议：固定应用依赖的版本号，以确保构建的可复现性
# 注意：以下版本号为示例，请根据您项目中实际测试通过的版本进行填写
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    "sqlalchemy>=2.0.30",
    "asyncpg>=0.29.0",
    "pydantic>=2.7.1",
    "pydantic_settings>=2.2.1",
    "celery>=5.4.0",
    "amqp>=5.3.0",
    "tenacity>=8.3.0",
    "python-multipart>=0.0.9",
    "alembic>=1.13.1",
]

[project.urls]
# 建议：添加项目相关的URL
Repository = "https://github.com/afashi/pdf-table-extractor"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0", # 如果您选择 Ruff 作为格式化工具，可以移除 black
    "ruff>=0.4.0",
    "mypy>=1.10.0",
    "pip-tools>=7.4.0", # 建议：添加 pip-tools 用于管理依赖
]

[tool.setuptools]
packages = ["pdf_extractor"]
package-dir = { "" = "src" }

[tool.ruff.lint]
# 可以将 select 和 ignore 移到 lint 子表中，更符合新版 Ruff 结构
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # mccabe
    "B", # flake8-bugbear
]

[tool.ruff.format]
# 建议：如果您想用 ruff 完全替代 black，可以添加此配置
quote-style = "double"
# ...其他格式化选项

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "auto"

# 建议：为 mypy 添加基础配置
[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true # 在初期非常有用，可以忽略没有类型定义的库所产生的错误
disallow_untyped_defs = true  # 鼓励为函数编写类型注解